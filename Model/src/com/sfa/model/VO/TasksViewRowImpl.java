package com.sfa.model.VO;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Mar 04 13:49:58 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TasksViewRowImpl extends ViewRowImpl {
    public static final int ENTITY_TASKS = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        TaskId,
        TaskName,
        DueDate,
        Priority,
        Description,
        AsigneeId,
        PercentageCompletion,
        OppurtunityId,
        CustAccountId,
        CreationDate,
        LastUpdateDate,
        CreatedBy,
        LastUpdatedBy,
        LastUpdateLogin,
        ObjectVersionNumber,
        Assignee,
        RelatedOppurtunity,
        TaskTeamView,
        TaskPriorityLuView1,
        UsersView1,
        UsersView2,
        OpportunitiesView1,
        AllUsersVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int TASKID = AttributesEnum.TaskId.index();
    public static final int TASKNAME = AttributesEnum.TaskName.index();
    public static final int DUEDATE = AttributesEnum.DueDate.index();
    public static final int PRIORITY = AttributesEnum.Priority.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int ASIGNEEID = AttributesEnum.AsigneeId.index();
    public static final int PERCENTAGECOMPLETION = AttributesEnum.PercentageCompletion.index();
    public static final int OPPURTUNITYID = AttributesEnum.OppurtunityId.index();
    public static final int CUSTACCOUNTID = AttributesEnum.CustAccountId.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();
    public static final int ASSIGNEE = AttributesEnum.Assignee.index();
    public static final int RELATEDOPPURTUNITY = AttributesEnum.RelatedOppurtunity.index();
    public static final int TASKTEAMVIEW = AttributesEnum.TaskTeamView.index();
    public static final int TASKPRIORITYLUVIEW1 = AttributesEnum.TaskPriorityLuView1.index();
    public static final int USERSVIEW1 = AttributesEnum.UsersView1.index();
    public static final int USERSVIEW2 = AttributesEnum.UsersView2.index();
    public static final int OPPORTUNITIESVIEW1 = AttributesEnum.OpportunitiesView1.index();
    public static final int ALLUSERSVO1 = AttributesEnum.AllUsersVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TasksViewRowImpl() {
    }

    /**
     * Gets Tasks entity object.
     * @return the Tasks
     */
    public EntityImpl getTasks() {
        return (EntityImpl) getEntity(ENTITY_TASKS);
    }

    /**
     * Gets the attribute value for TASK_ID using the alias name TaskId.
     * @return the TASK_ID
     */
    public BigDecimal getTaskId() {
        return (BigDecimal) getAttributeInternal(TASKID);
    }

    /**
     * Sets <code>value</code> as attribute value for TASK_ID using the alias name TaskId.
     * @param value value to set the TASK_ID
     */
    public void setTaskId(BigDecimal value) {
        setAttributeInternal(TASKID, value);
    }

    /**
     * Gets the attribute value for TASK_NAME using the alias name TaskName.
     * @return the TASK_NAME
     */
    public String getTaskName() {
        return (String) getAttributeInternal(TASKNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for TASK_NAME using the alias name TaskName.
     * @param value value to set the TASK_NAME
     */
    public void setTaskName(String value) {
        setAttributeInternal(TASKNAME, value);
    }

    /**
     * Gets the attribute value for DUE_DATE using the alias name DueDate.
     * @return the DUE_DATE
     */
    public Timestamp getDueDate() {
        return (Timestamp) getAttributeInternal(DUEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for DUE_DATE using the alias name DueDate.
     * @param value value to set the DUE_DATE
     */
    public void setDueDate(Timestamp value) {
        setAttributeInternal(DUEDATE, value);
    }

    /**
     * Gets the attribute value for PRIORITY using the alias name Priority.
     * @return the PRIORITY
     */
    public String getPriority() {
        return (String) getAttributeInternal(PRIORITY);
    }

    /**
     * Sets <code>value</code> as attribute value for PRIORITY using the alias name Priority.
     * @param value value to set the PRIORITY
     */
    public void setPriority(String value) {
        setAttributeInternal(PRIORITY, value);
    }

    /**
     * Gets the attribute value for DESCRIPTION using the alias name Description.
     * @return the DESCRIPTION
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description.
     * @param value value to set the DESCRIPTION
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for ASIGNEE_ID using the alias name AsigneeId.
     * @return the ASIGNEE_ID
     */
    public BigDecimal getAsigneeId() {
        return (BigDecimal) getAttributeInternal(ASIGNEEID);
    }

    /**
     * Sets <code>value</code> as attribute value for ASIGNEE_ID using the alias name AsigneeId.
     * @param value value to set the ASIGNEE_ID
     */
    public void setAsigneeId(BigDecimal value) {
        setAttributeInternal(ASIGNEEID, value);
    }

    /**
     * Gets the attribute value for PERCENTAGE_COMPLETION using the alias name PercentageCompletion.
     * @return the PERCENTAGE_COMPLETION
     */
    public BigDecimal getPercentageCompletion() {
        return (BigDecimal) getAttributeInternal(PERCENTAGECOMPLETION);
    }

    /**
     * Sets <code>value</code> as attribute value for PERCENTAGE_COMPLETION using the alias name PercentageCompletion.
     * @param value value to set the PERCENTAGE_COMPLETION
     */
    public void setPercentageCompletion(BigDecimal value) {
        setAttributeInternal(PERCENTAGECOMPLETION, value);
    }

    /**
     * Gets the attribute value for OPPURTUNITY_ID using the alias name OppurtunityId.
     * @return the OPPURTUNITY_ID
     */
    public BigDecimal getOppurtunityId() {
        return (BigDecimal) getAttributeInternal(OPPURTUNITYID);
    }

    /**
     * Sets <code>value</code> as attribute value for OPPURTUNITY_ID using the alias name OppurtunityId.
     * @param value value to set the OPPURTUNITY_ID
     */
    public void setOppurtunityId(BigDecimal value) {
        setAttributeInternal(OPPURTUNITYID, value);
    }

    /**
     * Gets the attribute value for CUST_ACCOUNT_ID using the alias name CustAccountId.
     * @return the CUST_ACCOUNT_ID
     */
    public BigDecimal getCustAccountId() {
        return (BigDecimal) getAttributeInternal(CUSTACCOUNTID);
    }

    /**
     * Sets <code>value</code> as attribute value for CUST_ACCOUNT_ID using the alias name CustAccountId.
     * @param value value to set the CUST_ACCOUNT_ID
     */
    public void setCustAccountId(BigDecimal value) {
        setAttributeInternal(CUSTACCOUNTID, value);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @return the LAST_UPDATE_LOGIN
     */
    public String getLastUpdateLogin() {
        return (String) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Gets the attribute value for OBJECT_VERSION_NUMBER using the alias name ObjectVersionNumber.
     * @return the OBJECT_VERSION_NUMBER
     */
    public Integer getObjectVersionNumber() {
        return (Integer) getAttributeInternal(OBJECTVERSIONNUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for OBJECT_VERSION_NUMBER using the alias name ObjectVersionNumber.
     * @param value value to set the OBJECT_VERSION_NUMBER
     */
    public void setObjectVersionNumber(Integer value) {
        setAttributeInternal(OBJECTVERSIONNUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Assignee.
     * @return the Assignee
     */
    public String getAssignee() {
        Object assigneeId = getAttributeInternal(ASIGNEEID);
        String userName = null;
        if(assigneeId != null) {
            Object[] obj = {assigneeId};
            Key key = new Key(obj);
            
            Row[] rows = getAllUsersVO1().findByKey(key, 1);
            if(rows !=null && rows.length > 0) {
                userName = (String)rows[0].getAttribute(1);
            }
                       
        }
            
        
        return userName;
            
            //(String) getAttributeInternal(ASSIGNEE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Assignee.
     * @param value value to set the  Assignee
     */
    public void setAssignee(String value) {
        setAttributeInternal(ASSIGNEE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RelatedOppurtunity.
     * @return the RelatedOppurtunity
     */
    public String getRelatedOppurtunity() {
        return (String) getAttributeInternal(RELATEDOPPURTUNITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RelatedOppurtunity.
     * @param value value to set the  RelatedOppurtunity
     */
    public void setRelatedOppurtunity(String value) {
        setAttributeInternal(RELATEDOPPURTUNITY, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link TaskTeamView.
     */
    public RowIterator getTaskTeamView() {
        return (RowIterator) getAttributeInternal(TASKTEAMVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> TaskPriorityLuView1.
     */
    public RowSet getTaskPriorityLuView1() {
        return (RowSet) getAttributeInternal(TASKPRIORITYLUVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> UsersView1.
     */
    public RowSet getUsersView1() {
        return (RowSet) getAttributeInternal(USERSVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> UsersView2.
     */
    public RowSet getUsersView2() {
        return (RowSet) getAttributeInternal(USERSVIEW2);
    }

    /**
     * Gets the view accessor <code>RowSet</code> OpportunitiesView1.
     */
    public RowSet getOpportunitiesView1() {
        return (RowSet) getAttributeInternal(OPPORTUNITIESVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AllUsersVO1.
     */
    public RowSet getAllUsersVO1() {
        return (RowSet) getAttributeInternal(ALLUSERSVO1);
    }
}

